{"data":[{"name":"2023-01-04 14:01:24","id":1672812084714,"body":"看到说是归并的写法,还有树状数组的写法\n归并排序 耗时 33:08\n\nclass Solution\n{\npublic:\n    int result;\n    void merge(vector<int> &nums, int left, int right)\n    {\n        if (left >= right)\n        {\n            return;\n        }\n        int mid = (left + right) / 2;\n        merge(nums, left, mid);\n        merge(nums, mid + 1, right);\n        // 计算逆序对\n        int left_start = left;\n        int right_start = mid + 1;\n        for (int right_start = mid + 1; right_start <= right; right_start++)\n        {\n            // [4, 5, 6] [1, 2]\n            // 如果 左边值比右边打 那么就有 左边剩余\n            int right_value = nums[right_start];\n            while (left_start <= mid && nums[left_start] <= right_value)\n            {\n                left_start++;\n            }\n            if (left_start > mid)\n            {\n                break;\n            }\n            // 对于right_value 有\n            int right_value_left_cnt = mid - left_start + 1;\n            // std::cout << \"(\" << left << \":\" << right << \":\" << right_start << \"+\" << right_value_left_cnt << \")\";\n            result += right_value_left_cnt;\n        }\n        sort(nums.begin() + left, nums.begin() + right + 1);\n        // std::cout << \"(\" << left << \":\" << right << \":排序后\";\n        // for (int i = 0; i < nums.size(); i++)\n        // {\n        //     std::cout << nums[i] << \",\";\n        // }\n        // std::cout << \"结果\" << std::endl;\n    }\n    int reversePairs(vector<int> &nums)\n    {\n        result = 0;\n        merge(nums, 0, nums.size() - 1);\n        return result;\n    }\n};"}]}