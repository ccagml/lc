{"data":[{"name":"2023-02-06 14:02:10","id":1675663330041,"body":"Accepted\n160/160 cases passed (488 ms)\nYour runtime beats 5.07 % of cpp submissions\nYour memory usage beats 4.99 % of cpp submissions (147.7 MB)\n耗时 0:23:44\nclass Solution\n{\npublic:\n    vector<vector<int>> combinationSum(vector<int> &candidates, int target)\n    {\n        unordered_map<int, vector<vector<int>>> uivvi;\n        uivvi[0] = {{}};\n        sort(candidates.begin(), candidates.end());\n        for (int need_tar = 1; need_tar <= target; need_tar++)\n        {\n            for (int j : candidates)\n            {\n                if (j <= need_tar)\n                {\n                    int other = need_tar - j;\n                    if (uivvi.count(other) > 0)\n                    {\n                        for (auto pp : uivvi[other])\n                        {\n                            vector<int> new_pp(pp.begin(), pp.end());\n                            new_pp.push_back(j);\n                            uivvi[need_tar].push_back(new_pp);\n                        }\n                    }\n                }\n                else\n                {\n                    break;\n                }\n            }\n        }\n\n        // 随便去重一下\n        unordered_set<string> us;\n        vector<vector<int>> reuslt;\n        for (auto pp : uivvi[target])\n        {\n            sort(pp.begin(), pp.end());\n            std::string str(pp.begin(), pp.end());\n            if (us.count(str) < 1)\n            {\n                us.insert(str);\n                reuslt.push_back(pp);\n            }\n        }\n\n        return reuslt;\n    }\n};"},{"name":"2023-02-06 14:06:22","id":1675663582114,"body":"Accepted\n160/160 cases passed (32 ms)\nYour runtime beats 8.83 % of cpp submissions\nYour memory usage beats 11.81 % of cpp submissions (16.7 MB)\nclass Solution\n{\npublic:\n    vector<vector<int>> combinationSum(vector<int> &candidates, int target)\n    {\n        unordered_map<int, vector<vector<int>>> uivvi;\n        uivvi[0] = {{}};\n        sort(candidates.begin(), candidates.end());\n        for (int need_tar = 1; need_tar <= target; need_tar++)\n        {\n            for (int j : candidates)\n            {\n                if (j <= need_tar)\n                {\n                    int other = need_tar - j;\n                    if (uivvi.count(other) > 0)\n                    {\n                        for (auto pp : uivvi[other])\n                        {\n                            vector<int> new_pp(pp.begin(), pp.end());\n                            if (new_pp.size() == 0 || j >= new_pp[new_pp.size() - 1])\n                            {\n                                new_pp.push_back(j);\n                                uivvi[need_tar].push_back(new_pp);\n                            }\n                        }\n                    }\n                }\n                else\n                {\n                    break;\n                }\n            }\n        }\n        return uivvi[target];\n    }\n};"},{"name":"2023-02-06 14:08:50","id":1675663730778,"body":"Accepted\n160/160 cases passed (20 ms)\nYour runtime beats 13.8 % of cpp submissions\nYour memory usage beats 24.53 % of cpp submissions (15.1 MB)\n不用拷贝"}]}