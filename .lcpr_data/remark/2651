{"data":[{"name":"2023-03-08 14:37:43","id":1678257463560,"body":"Accepted\n32/32 cases passed (612 ms)\nYour runtime beats 5.08 % of cpp submissions\nYour memory usage beats 5 % of cpp submissions (141.1 MB)\n耗时 0:31:16\n并查集+离散化"},{"name":"2023-03-08 14:39:07","id":1678257547189,"body":"class unionFind\n{\npublic:\n    vector<int> v_father;\n    unionFind(int n)\n    {\n        for (int i = 0; i < n; i++)\n        {\n            v_father.push_back(i);\n        }\n    }\n    int get(int i)\n    {\n        if (v_father[i] == i)\n        {\n            return i;\n        }\n        v_father[i] = get(v_father[i]);\n        return v_father[i];\n    }\n    void set(int a, int b)\n    {\n        int fa = get(a);\n        int fb = get(b);\n        if (fa > fb)\n        {\n            v_father[fa] = fb;\n        }\n        else if (fb > fa)\n        {\n            v_father[fb] = fa;\n        }\n    }\n};\n\nclass Solution\n{\npublic:\n    int countWays(vector<vector<int>> &ranges)\n    {\n        unordered_set<int> usi;\n        for (int i = 0; i < ranges.size(); i++)\n        {\n            usi.insert(ranges[i][0]);\n            usi.insert(ranges[i][1]);\n        }\n        vector<int> vi;\n        for (int p : usi)\n        {\n            vi.push_back(p);\n        }\n\n        sort(vi.begin(), vi.end());\n        unordered_map<int, int> umii;\n        for (int i = 0; i < vi.size(); i++)\n        {\n            umii[vi[i]] = i;\n        }\n\n        unionFind *uf = new unionFind(vi.size());\n        for (int i = 0; i < ranges.size(); i++)\n        {\n            int a = ranges[i][0];\n            int b = ranges[i][1];\n            int a_index = umii[a];\n            int b_index = umii[b];\n            for (int j = a_index; j <= b_index; j++)\n            {\n                uf->set(a_index, j);\n            }\n        }\n        int cnt = 0;\n        for (int i = 0; i < vi.size(); i++)\n        {\n            if (uf->get(i) == i)\n            {\n                cnt++;\n            }\n        }\n        return quick_pow(2, cnt);\n    }\n\n    long long quick_pow(long long a, long long b)\n    {\n        static const int MOD = 1e9 + 7;\n        long long ret = 1;\n        while (b)\n        {\n            if (b & 1)\n            {\n                ret = ret * a % MOD;\n            }\n            a = a * a % MOD;\n            b >>= 1;\n        }\n        return ret;\n    }\n};"}]}