{"data":[{"name":"2023-01-31 15:40:49","id":1675150849881,"body":"普通dfs\nAccepted\n25/25 cases passed (4 ms)\nYour runtime beats 31.56 % of cpp submissions\nYour memory usage beats 26.69 % of cpp submissions (6.5 MB)\n耗时 0:8:53\nclass Solution\n{\npublic:\n    vector<string> result;\n    string dig;\n    unordered_map<int, string> uis;\n    vector<string> letterCombinations(string digits)\n    {\n        dig = digits;\n        uis[2] = \"abc\";\n        uis[3] = \"def\";\n        uis[4] = \"ghi\";\n        uis[5] = \"jkl\";\n        uis[6] = \"mno\";\n        uis[7] = \"pqrs\";\n        uis[8] = \"tuv\";\n        uis[9] = \"wxyz\";\n        string temp = \"\";\n        dfs(0, temp);\n        return result;\n    }\n    void dfs(int i, string &temp)\n    {\n        if (i >= dig.size())\n        {\n            if (temp.size() > 0)\n            {\n\n                string new_str(temp);\n                result.push_back(new_str);\n            }\n            return;\n        }\n        int cur = dig[i] - '0';\n        string cur_str = uis[cur];\n        for (int j = 0; j < cur_str.size(); j++)\n        {\n            temp.push_back(cur_str[j]);\n            dfs(i + 1, temp);\n            temp.pop_back();\n        }\n    }\n};"}]}