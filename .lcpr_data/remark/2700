{"data":[{"name":"2023-02-18 11:18:42","id":1676690322384,"body":"Accepted\n59/59 cases passed (324 ms)\nYour runtime beats 76.18 % of cpp submissions\nYour memory usage beats 60.82 % of cpp submissions (108 MB)\n耗时 0:17:25\nclass Solution\n{\npublic:\n    vector<vector<int>> substringXorQueries(string s, vector<vector<int>> &queries)\n    {\n        unordered_map<int, pair<int, int>> uivii;\n        for (int i = 0; i < s.size(); i++)\n        {\n            int cur = s[i] - '0';\n            if (uivii.count(cur) < 1)\n            {\n                uivii[cur] = {i, i};\n            }\n            if (cur == 1)\n            {\n                for (int j = 1; j < 31; j++)\n                {\n                    int cur_j = i + j;\n                    if (cur_j < s.size())\n                    {\n                        cur *= 2;\n                        cur += (s[cur_j] - '0');\n                        if (uivii.count(cur) < 1)\n                        {\n                            uivii[cur] = {i, cur_j};\n                        }\n                    }\n                    else\n                    {\n                        break;\n                    }\n                }\n            }\n        }\n        vector<vector<int>> result;\n        for (int i = 0; i < queries.size(); i++)\n        {\n            int need = queries[i][0] ^ queries[i][1];\n            if (uivii.count(need) > 0)\n            {\n                pair<int, int> temp = uivii[need];\n                result.push_back({temp.first, temp.second});\n            }\n            else\n            {\n                result.push_back({-1, -1});\n            }\n        }\n        return result;\n    }\n};"}]}